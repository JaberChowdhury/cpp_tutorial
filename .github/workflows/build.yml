name: Build and Release C++ Binaries

on:
  push:
    branches:
      - main  # Trigger on any push to the `main` branch
    paths:
      - '**'  # Trigger on any file change (you can specify specific folders if needed)

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up build environment (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      - name: Set up build environment (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

      - name: Set up build environment (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install cmake

      - name: Create build directory
        run: mkdir build

      - name: Configure CMake
        run: cmake -B build -S .

      - name: Build the project
        run: cmake --build build --config Release

      - name: Package binaries
        run: |
          mkdir -p dist/${{ matrix.os }}
          cp build/your_binary_name dist/${{ matrix.os }}/
          # Replace `your_binary_name` with the actual binary name

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries-${{ matrix.os }}
          path: dist/${{ matrix.os }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}  # Use the commit SHA as the tag
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload binaries to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/ubuntu-latest/your_binary_name
          asset_name: your_binary_name-ubuntu
          asset_content_type: application/octet-stream

      - name: Upload Windows binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/windows-latest/your_binary_name.exe
          asset_name: your_binary_name-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/macos-latest/your_binary_name
          asset_name: your_binary_name-macos
          asset_content_type: application/octet-stream